<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: SystemManager Pages: 1 -->
<svg width="2669pt" height="457pt"
 viewBox="0.00 0.00 2668.50 457.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 453)">
<title>SystemManager</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-453 2664.5,-453 2664.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="1036.5,-0.5 1036.5,-145.5 1662.5,-145.5 1662.5,-0.5 1036.5,-0.5"/>
<text text-anchor="middle" x="1349.5" y="-133.5" font-family="Helvetica,sans-Serif" font-size="10.00">SystemManager</text>
<polyline fill="none" stroke="black" points="1036.5,-126.5 1662.5,-126.5 "/>
<text text-anchor="start" x="1044.5" y="-114.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::atomic&lt; bool &gt; stopStream</text>
<polyline fill="none" stroke="black" points="1036.5,-107.5 1662.5,-107.5 "/>
<text text-anchor="start" x="1044.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SystemManager()</text>
<text text-anchor="start" x="1044.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SystemManager()</text>
<text text-anchor="start" x="1044.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void initializeSystem()</text>
<text text-anchor="start" x="1044.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void shutdownSystem()</text>
<text text-anchor="start" x="1044.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void enumerateCameras()</text>
<text text-anchor="start" x="1044.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setFeature(std::string cameraID, std::string featureName, std::string value)</text>
<text text-anchor="start" x="1044.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void syncFreeRunStream(std::list&lt; std::string &gt; camerasIDs, bool saveStream, std::chrono::milliseconds acquisitionDelay)</text>
<text text-anchor="start" x="1044.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool ptpEnable(std::list&lt; std::string &gt; camerasIDs)</text>
<text text-anchor="start" x="1044.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool ptpDisable(std::list&lt; std::string &gt; camerasIDs)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classDeviceManager.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="0,-193.5 0,-448.5 631,-448.5 631,-193.5 0,-193.5"/>
<text text-anchor="middle" x="315.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">DeviceManager</text>
<polyline fill="none" stroke="black" points="0,-429.5 631,-429.5 "/>
<text text-anchor="start" x="8" y="-417.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ uint32_t groupKey</text>
<text text-anchor="start" x="8" y="-406.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ uint32_t groupMask</text>
<text text-anchor="start" x="8" y="-395.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::list&lt; std::shared_ptr&lt; Camera &gt; &gt; openCamerasList</text>
<text text-anchor="start" x="8" y="-384.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::set&lt; std::shared_ptr&lt; rcg::Device &gt; &gt; availableCamerasList</text>
<polyline fill="none" stroke="black" points="0,-377.5 631,-377.5 "/>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeviceManager()</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~DeviceManager()</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getAvailableCameras()</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void createCameras(std::list&lt; std::string &gt; deviceIds)</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void scheduleActionCommands(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList, std::string masterClockId)</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ const std::set&lt; std::shared_ptr&lt; rcg::Device &gt; &gt; &amp; getAvailableCamerasList() const</text>
<text text-anchor="start" x="8" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::shared_ptr&lt; rcg::Device &gt; getAvailableCameraByID(const std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::list&lt; std::string &gt; listAvailableCamerasByID()</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ const std::list&lt; std::shared_ptr&lt; Camera &gt; &gt; &amp; getOpenCameras() const</text>
<text text-anchor="start" x="8" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::shared_ptr&lt; Camera &gt; getOpenCameraByID(const std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="8" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool createCamera(const std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool closeCamera(const std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void enumerateDevicesFromSystems(const std::vector&lt; std::shared_ptr&lt; rcg::System &gt;&gt; &amp;systems)</text>
<text text-anchor="start" x="8" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int64_t getScheduledTime(int64_t scheduledDelayS, std::string masterClockId)</text>
<text text-anchor="start" x="8" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool listCamera(std::shared_ptr&lt; Camera &gt; camera)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M631.18,-195.34C633.96,-194.55 636.73,-193.76 639.5,-193 763.37,-158.74 902.27,-132.81 1024.16,-114.03"/>
<polygon fill="none" stroke="#404040" points="1024.41,-114 1029.74,-109.14 1036.27,-112.18 1030.95,-117.04 1024.41,-114"/>
<text text-anchor="middle" x="798" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00"> +deviceManager</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classStreamManager.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="649,-248.5 649,-393.5 2050,-393.5 2050,-248.5 649,-248.5"/>
<text text-anchor="middle" x="1349.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">StreamManager</text>
<polyline fill="none" stroke="black" points="649,-374.5 2050,-374.5 "/>
<text text-anchor="start" x="657" y="-362.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::atomic&lt; int &gt; startedThreads</text>
<text text-anchor="start" x="657" y="-351.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::mutex globalFrameMutex</text>
<text text-anchor="start" x="657" y="-340.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; std::thread &gt; threads</text>
<text text-anchor="start" x="657" y="-329.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; cv::Mat &gt; globalFrames</text>
<polyline fill="none" stroke="black" points="649,-322.5 2050,-322.5 "/>
<text text-anchor="start" x="657" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StreamManager()</text>
<text text-anchor="start" x="657" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StreamManager()</text>
<text text-anchor="start" x="657" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void startFreeRunStream(std::shared_ptr&lt; Camera &gt; camera, std::atomic&lt; bool &gt; &amp;stopStream, bool saveStream, int threadIndex)</text>
<text text-anchor="start" x="657" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void startPtpSyncFreeRun(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras, std::atomic&lt; bool &gt; &amp;stopStream, bool saveStream, std::chrono::milliseconds acquisitionDelay=std::chrono::milliseconds(0), std::function&lt; void(const cv::Mat &amp;)&gt; displayCallback=nullptr)</text>
<text text-anchor="start" x="657" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void stopStreaming()</text>
<text text-anchor="start" x="657" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; cv::Mat createComposite(const std::vector&lt; cv::Mat &gt; &amp;frames)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M1349.5,-248.19C1349.5,-220.02 1349.5,-187.49 1349.5,-158.22"/>
<polygon fill="none" stroke="#404040" points="1349.5,-157.9 1345.5,-151.9 1349.5,-145.9 1353.5,-151.9 1349.5,-157.9"/>
<text text-anchor="middle" x="1394" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00"> +streamManager</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classNetworkManager.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="2068.5,-210 2068.5,-432 2660.5,-432 2660.5,-210 2068.5,-210"/>
<text text-anchor="middle" x="2364.5" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">NetworkManager</text>
<polyline fill="none" stroke="black" points="2068.5,-413 2660.5,-413 "/>
<text text-anchor="start" x="2076.5" y="-401" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const int timeWindowSize</text>
<text text-anchor="start" x="2076.5" y="-390" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::string masterClockId</text>
<polyline fill="none" stroke="black" points="2068.5,-383 2660.5,-383 "/>
<text text-anchor="start" x="2076.5" y="-371" font-family="Helvetica,sans-Serif" font-size="10.00">+ NetworkManager()</text>
<text text-anchor="start" x="2076.5" y="-360" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NetworkManager()</text>
<text text-anchor="start" x="2076.5" y="-349" font-family="Helvetica,sans-Serif" font-size="10.00">+ void enablePtp(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="2076.5" y="-338" font-family="Helvetica,sans-Serif" font-size="10.00">+ void disablePtp(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="2076.5" y="-327" font-family="Helvetica,sans-Serif" font-size="10.00">+ void monitorPtpStatus(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="2076.5" y="-316" font-family="Helvetica,sans-Serif" font-size="10.00">+ void monitorPtpOffset(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="2076.5" y="-305" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setOffsetfromMaster(std::shared_ptr&lt; Camera &gt; masterCamera, std::shared_ptr&lt; Camera &gt; camera)</text>
<text text-anchor="start" x="2076.5" y="-294" font-family="Helvetica,sans-Serif" font-size="10.00">+ void configureBandwidth(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="2076.5" y="-283" font-family="Helvetica,sans-Serif" font-size="10.00">+ void calculateMaxFps(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras, double packetDelay)</text>
<text text-anchor="start" x="2076.5" y="-272" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getMinimumExposure(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="2076.5" y="-261" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setExposureAndFps(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="2076.5" y="-250" font-family="Helvetica,sans-Serif" font-size="10.00">+ void configurePtpSyncFreeRun(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="2076.5" y="-239" font-family="Helvetica,sans-Serif" font-size="10.00">+ void printPtpConfig(std::shared_ptr&lt; Camera &gt; camera)</text>
<text text-anchor="start" x="2076.5" y="-228" font-family="Helvetica,sans-Serif" font-size="10.00">+ void logOffsetHistoryToCSV(const std::unordered_map&lt; std::string, std::deque&lt; CameraSample &gt;&gt; &amp;offsetHistory)</text>
<text text-anchor="start" x="2076.5" y="-217" font-family="Helvetica,sans-Serif" font-size="10.00">+ void plotOffsets(double ptpThreshold=1000.0)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M2111.86,-209.99C2093.96,-203.79 2076.05,-198.04 2058.5,-193 1935.15,-157.55 1796.51,-131.38 1674.76,-112.75"/>
<polygon fill="none" stroke="#404040" points="1674.51,-112.72 1667.98,-115.77 1662.65,-110.92 1669.18,-107.86 1674.51,-112.72"/>
<text text-anchor="middle" x="2030.5" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00"> +networkManager</text>
</g>
</g>
</svg>
