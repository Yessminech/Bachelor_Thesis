<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: NetworkManager Pages: 1 -->
<svg width="600pt" height="231pt"
 viewBox="0.00 0.00 600.00 231.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 227)">
<title>NetworkManager</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-227 596,-227 596,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-222.5 592,-222.5 592,-0.5 0,-0.5"/>
<text text-anchor="middle" x="296" y="-210.5" font-family="Helvetica,sans-Serif" font-size="10.00">NetworkManager</text>
<polyline fill="none" stroke="black" points="0,-203.5 592,-203.5 "/>
<text text-anchor="start" x="8" y="-191.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const int timeWindowSize</text>
<text text-anchor="start" x="8" y="-180.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::string masterClockId</text>
<polyline fill="none" stroke="black" points="0,-173.5 592,-173.5 "/>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NetworkManager()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NetworkManager()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void enablePtp(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void disablePtp(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void monitorPtpStatus(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void monitorPtpOffset(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setOffsetfromMaster(std::shared_ptr&lt; Camera &gt; masterCamera, std::shared_ptr&lt; Camera &gt; camera)</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void configureBandwidth(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void calculateMaxFps(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras, double packetDelay)</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getMinimumExposure(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setExposureAndFps(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void configurePtpSyncFreeRun(const std::list&lt; std::shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void printPtpConfig(std::shared_ptr&lt; Camera &gt; camera)</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void logOffsetHistoryToCSV(const std::unordered_map&lt; std::string, std::deque&lt; CameraSample &gt;&gt; &amp;offsetHistory)</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void plotOffsets(double ptpThreshold=1000.0)</text>
</a>
</g>
</g>
</g>
</svg>
