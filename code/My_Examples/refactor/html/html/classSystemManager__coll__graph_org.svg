<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: SystemManager Pages: 1 -->
<svg width="718pt" height="809pt"
 viewBox="0.00 0.00 718.00 809.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 805)">
<title>SystemManager</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="225,-0.5 225,-233.5 455,-233.5 455,-0.5 225,-0.5"/>
<text text-anchor="middle" x="340" y="-221.5" font-family="Helvetica,sans-Serif" font-size="10.00">SystemManager</text>
<polyline fill="none" stroke="black" points="225,-214.5 455,-214.5 "/>
<text text-anchor="start" x="233" y="-202.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::atomic&lt; bool &gt; stopStream</text>
<polyline fill="none" stroke="black" points="225,-195.5 455,-195.5 "/>
<text text-anchor="start" x="233" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SystemManager()</text>
<text text-anchor="start" x="233" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SystemManager()</text>
<text text-anchor="start" x="233" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void initializeSystem()</text>
<text text-anchor="start" x="233" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void shutdownSystem()</text>
<text text-anchor="start" x="233" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void enumerateCameras()</text>
<text text-anchor="start" x="233" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void enumerateOpenCameras()</text>
<text text-anchor="start" x="233" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setFeature(std::string</text>
<text text-anchor="start" x="233" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> cameraID, std::string featureName,</text>
<text text-anchor="start" x="233" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string value)</text>
<text text-anchor="start" x="233" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void syncFreeRunStream</text>
<text text-anchor="start" x="233" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::list&lt; std::string</text>
<text text-anchor="start" x="233" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; camerasIDs, bool saveStream,</text>
<text text-anchor="start" x="233" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::chrono::milliseconds acquisitionDelay)</text>
<text text-anchor="start" x="233" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool ptpEnable(std::list</text>
<text text-anchor="start" x="233" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::string &gt; camerasIDs)</text>
<text text-anchor="start" x="233" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool ptpDisable(std::list</text>
<text text-anchor="start" x="233" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::string &gt; camerasIDs)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classDeviceManager.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-287 0,-795 206,-795 206,-287 0,-287"/>
<text text-anchor="middle" x="103" y="-783" font-family="Helvetica,sans-Serif" font-size="10.00">DeviceManager</text>
<polyline fill="none" stroke="black" points="0,-776 206,-776 "/>
<text text-anchor="start" x="8" y="-764" font-family="Helvetica,sans-Serif" font-size="10.00">+ uint32_t groupKey</text>
<text text-anchor="start" x="8" y="-753" font-family="Helvetica,sans-Serif" font-size="10.00">+ uint32_t groupMask</text>
<text text-anchor="start" x="8" y="-742" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::list&lt; std::shared</text>
<text text-anchor="start" x="8" y="-731" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt; &gt; openCamerasList</text>
<text text-anchor="start" x="8" y="-720" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::set&lt; std::shared</text>
<text text-anchor="start" x="8" y="-709" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; rcg::Device &gt; &gt; available</text>
<text text-anchor="start" x="8" y="-698" font-family="Helvetica,sans-Serif" font-size="10.00">CamerasList</text>
<polyline fill="none" stroke="black" points="0,-691 206,-691 "/>
<text text-anchor="start" x="8" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeviceManager()</text>
<text text-anchor="start" x="8" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~DeviceManager()</text>
<text text-anchor="start" x="8" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getAvailableCameras()</text>
<text text-anchor="start" x="8" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00">+ void createCameras(std</text>
<text text-anchor="start" x="8" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00">::list&lt; std::string &gt; deviceIds)</text>
<text text-anchor="start" x="8" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00">+ void scheduleActionCommands</text>
<text text-anchor="start" x="8" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::shared</text>
<text text-anchor="start" x="8" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt;&gt; &amp;openCamerasList,</text>
<text text-anchor="start" x="8" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string masterClockId)</text>
<text text-anchor="start" x="8" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00">+ const std::set&lt; std::shared</text>
<text text-anchor="start" x="8" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; rcg::Device &gt; &gt; &amp; getAvailable</text>
<text text-anchor="start" x="8" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00">CamerasList() const</text>
<text text-anchor="start" x="8" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::shared_ptr&lt; rcg::</text>
<text text-anchor="start" x="8" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00">Device &gt; getAvailableCameraByID</text>
<text text-anchor="start" x="8" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::list&lt; std::string</text>
<text text-anchor="start" x="8" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; listAvailableCamerasByID()</text>
<text text-anchor="start" x="8" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00">+ const std::list&lt; std::</text>
<text text-anchor="start" x="8" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00">shared_ptr&lt; Camera &gt; &gt;</text>
<text text-anchor="start" x="8" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; getOpenCameras() const</text>
<text text-anchor="start" x="8" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::shared_ptr&lt; Camera</text>
<text text-anchor="start" x="8" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; getOpenCameraByID(const</text>
<text text-anchor="start" x="8" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-426" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="8" y="-415" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool createCamera(const</text>
<text text-anchor="start" x="8" y="-404" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool closeCamera(const</text>
<text text-anchor="start" x="8" y="-382" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;deviceId)</text>
<text text-anchor="start" x="8" y="-371" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void enumerateDevicesFromSystems</text>
<text text-anchor="start" x="8" y="-360" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-349" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; rcg::System &gt;&gt; &amp;systems)</text>
<text text-anchor="start" x="8" y="-338" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int64_t getScheduledTime</text>
<text text-anchor="start" x="8" y="-327" font-family="Helvetica,sans-Serif" font-size="10.00">(int64_t scheduledDelayS,</text>
<text text-anchor="start" x="8" y="-316" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string masterClockId)</text>
<text text-anchor="start" x="8" y="-305" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool listCamera(std::shared</text>
<text text-anchor="start" x="8" y="-294" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt; camera)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M206.17,-296.47C209.08,-291.23 212.02,-286.07 215,-281 222.34,-268.51 230.5,-255.87 239.03,-243.45"/>
<polygon fill="none" stroke="#404040" points="239.08,-243.39 239.24,-236.18 245.95,-233.55 245.8,-240.76 239.08,-243.39"/>
<text text-anchor="middle" x="276.5" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00"> +deviceManager</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classStreamManager.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="224.5,-386 224.5,-696 455.5,-696 455.5,-386 224.5,-386"/>
<text text-anchor="middle" x="340" y="-684" font-family="Helvetica,sans-Serif" font-size="10.00">StreamManager</text>
<polyline fill="none" stroke="black" points="224.5,-677 455.5,-677 "/>
<text text-anchor="start" x="232.5" y="-665" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::atomic&lt; int &gt; startedThreads</text>
<text text-anchor="start" x="232.5" y="-654" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::mutex globalFrameMutex</text>
<text text-anchor="start" x="232.5" y="-643" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; std::thread</text>
<text text-anchor="start" x="232.5" y="-632" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; threads</text>
<text text-anchor="start" x="232.5" y="-621" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; cv::Mat &gt;</text>
<text text-anchor="start" x="232.5" y="-610" font-family="Helvetica,sans-Serif" font-size="10.00"> globalFrames</text>
<polyline fill="none" stroke="black" points="224.5,-603 455.5,-603 "/>
<text text-anchor="start" x="232.5" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00">+ StreamManager()</text>
<text text-anchor="start" x="232.5" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StreamManager()</text>
<text text-anchor="start" x="232.5" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00">+ void startFreeRunStream</text>
<text text-anchor="start" x="232.5" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; Camera</text>
<text text-anchor="start" x="232.5" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; camera, std::atomic&lt; bool</text>
<text text-anchor="start" x="232.5" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp;stopStream, bool saveStream,</text>
<text text-anchor="start" x="232.5" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00"> int threadIndex)</text>
<text text-anchor="start" x="232.5" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00">+ void startPtpSyncFreeRun</text>
<text text-anchor="start" x="232.5" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::shared</text>
<text text-anchor="start" x="232.5" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt;&gt; &amp;openCameras,</text>
<text text-anchor="start" x="232.5" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00"> std::atomic&lt; bool &gt; &amp;stopStream,</text>
<text text-anchor="start" x="232.5" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00"> bool saveStream, std::chrono::milliseconds</text>
<text text-anchor="start" x="232.5" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00"> acquisitionDelay=std::chrono::milliseconds</text>
<text text-anchor="start" x="232.5" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00">(0), std::function&lt; void(const cv::Mat &amp;)&gt;</text>
<text text-anchor="start" x="232.5" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00"> displayCallback=nullptr)</text>
<text text-anchor="start" x="232.5" y="-426" font-family="Helvetica,sans-Serif" font-size="10.00">+ void stopStreaming()</text>
<text text-anchor="start" x="232.5" y="-415" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; cv::Mat createComposite</text>
<text text-anchor="start" x="232.5" y="-404" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::vector&lt; cv::</text>
<text text-anchor="start" x="232.5" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00">Mat &gt; &amp;frames)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M340,-385.86C340,-339.91 340,-290.07 340,-245.99"/>
<polygon fill="none" stroke="#404040" points="340,-245.72 336,-239.72 340,-233.72 344,-239.71 340,-245.72"/>
<text text-anchor="middle" x="384.5" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00"> +streamManager</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classNetworkManager.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="474,-281.5 474,-800.5 710,-800.5 710,-281.5 474,-281.5"/>
<text text-anchor="middle" x="592" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">NetworkManager</text>
<polyline fill="none" stroke="black" points="474,-781.5 710,-781.5 "/>
<text text-anchor="start" x="482" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const int timeWindowSize</text>
<text text-anchor="start" x="482" y="-758.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::string masterClockId</text>
<polyline fill="none" stroke="black" points="474,-751.5 710,-751.5 "/>
<text text-anchor="start" x="482" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NetworkManager()</text>
<text text-anchor="start" x="482" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NetworkManager()</text>
<text text-anchor="start" x="482" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void enablePtp(const std</text>
<text text-anchor="start" x="482" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">::list&lt; std::shared_ptr</text>
<text text-anchor="start" x="482" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="482" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void disablePtp(const</text>
<text text-anchor="start" x="482" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::list&lt; std::shared</text>
<text text-anchor="start" x="482" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="482" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void monitorPtpStatus</text>
<text text-anchor="start" x="482" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::</text>
<text text-anchor="start" x="482" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="482" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void monitorPtpOffset</text>
<text text-anchor="start" x="482" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::</text>
<text text-anchor="start" x="482" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">shared_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="482" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setOffsetfromMaster</text>
<text text-anchor="start" x="482" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; Camera</text>
<text text-anchor="start" x="482" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; masterCamera, std::shared</text>
<text text-anchor="start" x="482" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt; camera)</text>
<text text-anchor="start" x="482" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void configureBandwidth</text>
<text text-anchor="start" x="482" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::shared</text>
<text text-anchor="start" x="482" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="482" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void calculateMaxFps(const</text>
<text text-anchor="start" x="482" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::list&lt; std::shared_ptr</text>
<text text-anchor="start" x="482" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Camera &gt;&gt; &amp;openCameras, double</text>
<text text-anchor="start" x="482" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"> packetDelay)</text>
<text text-anchor="start" x="482" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getMinimumExposure</text>
<text text-anchor="start" x="482" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::shared</text>
<text text-anchor="start" x="482" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="482" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void setExposureAndFps</text>
<text text-anchor="start" x="482" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::</text>
<text text-anchor="start" x="482" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">shared_ptr&lt; Camera &gt;&gt; &amp;openCameras)</text>
<text text-anchor="start" x="482" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void configurePtpSyncFreeRun</text>
<text text-anchor="start" x="482" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::list&lt; std::shared</text>
<text text-anchor="start" x="482" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Camera &gt;&gt; &amp;openCamerasList)</text>
<text text-anchor="start" x="482" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void printPtpConfig(std</text>
<text text-anchor="start" x="482" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Camera &gt; camera)</text>
<text text-anchor="start" x="482" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void logOffsetHistoryToCSV</text>
<text text-anchor="start" x="482" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::unordered_map</text>
<text text-anchor="start" x="482" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::string, std::deque</text>
<text text-anchor="start" x="482" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; CameraSample &gt;&gt; &amp;offsetHistory)</text>
<text text-anchor="start" x="482" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void plotOffsets(double</text>
<text text-anchor="start" x="482" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ptpThreshold=1000.0)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M473.85,-297.26C470.59,-291.76 467.3,-286.33 464,-281 456.32,-268.6 447.91,-255.98 439.21,-243.55"/>
<polygon fill="none" stroke="#404040" points="439.11,-243.41 432.38,-240.82 432.18,-233.61 438.91,-236.2 439.11,-243.41"/>
<text text-anchor="middle" x="499" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00"> +networkManager</text>
</g>
</g>
</svg>
